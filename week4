 # 1. Kullanıcı adı ve şifre alanları boş geçildiğinde uyarı mesajı olarak "Epic sadface: Username is required" gösterilmelidir.
# from selenium import webdriver
# from webdriver_manager.chrome import ChromeDriverManager
# from time import sleep
# from selenium.webdriver.common.by import By
# class Test_Sauce:
#     driver = webdriver.Chrome(ChromeDriverManager().install())
#     driver.minimize_window()
#     def test_invalid_login(self):
#         self.driver.maximize_window()        
#         self.driver.get("https://www.saucedemo.com/")
#         sleep(5)
#         loginBtn = self.driver.find_element(By.ID,"login-button")
#         sleep(5)
#         loginBtn.click()
#         errorMessage = self.driver.find_element(By.XPATH,"//*[@id='login_button_container']/div/form/div[3]/h3")
#         testResult = errorMessage.text == "Epic sadface: Username is required."
#         print("test_invalid_login fonksiyonu")
#         print(f"Test Sonucu: {testResult}")

# testsauce=Test_Sauce()
# testsauce.test_invalid_login()
# while True:
#     continue

# 2. Sadece şifre alanı boş geçildiğinde uyarı mesajı olarak "Epic sadface: Password is required" gösterilmelidir.
# from selenium import webdriver
# from webdriver_manager.chrome import ChromeDriverManager
# from time import sleep
# from selenium.webdriver.common.by import By
# class Test_Sauce:
#     driver = webdriver.Chrome(ChromeDriverManager().install())
#     driver.minimize_window()
#     def user_name_req(self):
#         self.driver.maximize_window()                
#         self.driver.get("https://www.saucedemo.com/")
#         sleep(2)       
#         usernameInput = self.driver.find_element(By.ID,"user-name")
#         sleep(2)
#         usernameInput.send_keys("Kerim")
#         loginBtn = self.driver.find_element(By.ID,"login-button")
#         sleep(2)
#         loginBtn.click()
#         errorMessage = self.driver.find_element(By.XPATH,"//*[@id='login_button_container']/div/form/div[3]/h3")
#         testResult = errorMessage.text == "Epic sadface: Password is required"
#         print("user_name_req fonksiyonu")
#         print(f"Test Sonucu: {testResult}")
# testsauce=Test_Sauce()
# testsauce.user_name_req()
# while True:
#     continue



# 3.Kullanıcı adı "locked_out_user" şifre alanı "secret_sauce" gönderildiğinde "Epic sadface: Sorry, this user has been locked out." mesajı gösterilmelidir.
# from selenium import webdriver
# # from webdriver_manager.chrome import ChromeDriverManager
# # from time import sleep
# # from selenium.webdriver.common.by import By
# class Test_Sauce:
#     driver = webdriver.Chrome(ChromeDriverManager().install())
#     driver.minimize_window()
#     def locked_out(self):
#         self.driver.maximize_window()                
#         self.driver.get("https://www.saucedemo.com/")
#         sleep(2)
#         usernameInput = self.driver.find_element(By.ID, "user-name")
#         passwordInput = self.driver.find_element(By.ID,"password")
#         sleep(2)
#         usernameInput.send_keys("locked_out_user")
#         passwordInput.send_keys("secret_sauce")
#         sleep(2)
#         loginBtn = self.driver.find_element(By.ID,"login-button")
#         sleep(2)
#         loginBtn.click()
#         errorMessage = self.driver.find_element(By.XPATH,"//*[@id='login_button_container']/div/form/div[3]/h3")
#         testResult = errorMessage.text == "Epic sadface: Sorry, this user has been locked out."
#         print("locked_out fonksiyonu")
#         print(f"Test Sonucu: {testResult}")
# testsauce=Test_Sauce()
# testsauce.locked_out()
# while True:
#     continue


# 4.Kullanıcı adı ve şifre alanları boş geçildiğinde bu iki inputun yanında da kırmızı "X" ikonu çıkmalıdır. Daha sonra aşağıda çıkan uyarı mesajının kapatma butonuna tıklandığında bu "X" ikonları kaybolmalıdır. (Tek test casede işleyiniz)

# KOD ÇALIŞMADI BU CASE'İ YAPAMADIM.

# from selenium import webdriver
# from webdriver_manager.chrome import ChromeDriverManager
# from time import sleep
# from selenium.webdriver.common.by import By
# class Test_Sauce:
#     driver = webdriver.Chrome(ChromeDriverManager().install())
#     driver.minimize_window()
#     def x_icon(self):
#         self.driver.maximize_window()                
#         self.driver.get("https://www.saucedemo.com/")
#         sleep(2)
#         loginBtn = self.driver.find_element(By.ID,"login-button")
#         loginBtn.click()
#         sleep(2)
#         testResult=True
        
#         # ^^ suan 2 adet x olmalı    
#         x_icons = self.driver.find_elements(By.CLASS_NAME,"error_icon")
#         number_of_x_icons=len(x_icons)

        
#         if(number_of_x_icons==2):
#             testResult=True

#             error_button=self.driver.find_element(By.CLASS_NAME,"error-button")
#             error_button.click()
#             x_icons.clear()
#             sleep(2)
#             x_icons = self.driver.find_elements(By.CLASS_NAME,"error_icon")
#             number_of_x_icons=len(x_icons)

#         else:
#             testResult=False

#             print(f"{number_of_x_icons} adet X ikonu bulundu \n2 adet olmalıydı")
#             print("x_icon fonksiyonu")
#             print(f"TEST SONUCU: {testResult}")   
# testsauce=Test_Sauce()
# testsauce.x_icon()
# while True:
#     continue


# 5. Kullanıcı adı "standard_user" şifre "secret_sauce" gönderildiğinde kullanıcı "/inventory.html" sayfasına gönderilmelidir.
# from selenium import webdriver
# from webdriver_manager.chrome import ChromeDriverManager
# from time import sleep
# from selenium.webdriver.common.by import By
# class Test_Sauce:
#     driver = webdriver.Chrome(ChromeDriverManager().install())
#     driver.minimize_window()
#     def standard_user(self):
#         self.driver.maximize_window()       
#         self.driver.get("https://www.saucedemo.com/")
#         sleep(2)
#         usernameInput = self.driver.find_element(By.ID, "user-name")
#         passwordInput = self.driver.find_element(By.ID,"password")
#         sleep(2)
#         usernameInput.send_keys("standard_user")
#         passwordInput.send_keys("secret_sauce")
#         sleep(2)
#         loginBtn = self.driver.find_element(By.ID,"login-button")
#         sleep(2)
#         loginBtn.click()
#         sleep(2)
#         normalurl=self.driver.current_url
#         sleep(20)

#         if(normalurl.endswith("/inventory.html")):
#             testResult=True

#             print("standard_user fonksiyonu")
#             print(f"Test Sonucu: {testResult}")

#         else:
#             testResult=False

#             print("standard_user fonksiyonu")
#             print(f"TEST SONUCU: {testResult}")
# testsauce=Test_Sauce()
# testsauce.standard_user()
# while True:
#     continue

#  6.Giriş yapıldıktan sonra kullanıcıya gösterilen ürün sayısı "6" adet olmalıdır.
# from selenium import webdriver
# from webdriver_manager.chrome import ChromeDriverManager
# from time import sleep
# from selenium.webdriver.common.by import By
# class Test_Sauce:
#     driver = webdriver.Chrome(ChromeDriverManager().install())
#     driver.minimize_window()
#     def products(self):
#         self.driver.maximize_window()       
#         self.driver.get("https://www.saucedemo.com/")
#         sleep(2)
#         usernameInput = self.driver.find_element(By.ID, "user-name")
#         passwordInput = self.driver.find_element(By.ID,"password")
#         sleep(2)
#         usernameInput.send_keys("standard_user")
#         passwordInput.send_keys("secret_sauce")
#         sleep(2)
#         loginBtn = self.driver.find_element(By.ID,"login-button")
#         sleep(2)
#         loginBtn.click()
#         sleep(2)
        
#         products=self.driver.find_elements(By.CLASS_NAME,"inventory_item")
#         number_of_products=len(products)
#         if(number_of_products==6):
#             testResult=True
#             print("products fonksiyonu")
#             print(f"TEST SONUCU: {testResult}")
#             print(f"ürün sayisi {number_of_products} adettir.")

#         else:
#             testResult=False
#             print(f"{number_of_products} adet ürün bulundu 6 adet bulunmaliydi") 
#             print("products fonksiyonu")
#             print(f"TEST SONUCU: {testResult}")
# testsauce=Test_Sauce()
# testsauce.products()
# while True:
#     continue


